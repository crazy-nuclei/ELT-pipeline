version: '3.8'

services:

  metabase:
    image: metabase/metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - ./metabase-data:/metabase-data
    networks:
      - airflow_network

  # PostgreSQL for ELT Jobs
  postgres-elt:
    image: postgres:13
    container_name: elt-postgres
    environment:
      POSTGRES_USER: eltuser
      POSTGRES_PASSWORD: eltpassword
      POSTGRES_DB: eltdb
    volumes:
      - postgres_elt_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - airflow_network

  # PostgreSQL for Airflow metadata
  postgres-airflow:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
    networks:
      - airflow_network

  # Airflow Init
  airflow-init:
    image: apache/airflow:2.3.0
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    entrypoint: >
      bash -c "
      airflow db init &&
      airflow users create --username airflow --firstname Admin --lastname User --role Admin --email admin@example.com --password airflow
      "
    command: -c "airflow db init && airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com"
    networks:
      - airflow_network

  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.3.0
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: my_super_secret_key
    ports:
      - "8080:8080"
    networks:
      - airflow_network
    volumes:
      - ./dags:/opt/airflow/dags  
      - ./scripts:/opt/airflow/dags/scripts
      - ./incoming-data:/opt/airflow/dags/incoming-data
      - ./archived-data:/opt/airflow/dags/archived-data
    command: webserver
    restart: always

  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.3.0
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: my_super_secret_key
    networks:
      - airflow_network
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dags:/opt/airflow/dags  
      - ./scripts:/opt/airflow/dags/scripts
      - ./incoming-data:/opt/airflow/dags/incoming-data
      - ./archived-data:/opt/airflow/dags/archived-data
    command: scheduler
    restart: always

volumes:
  postgres_airflow_data:
  postgres_elt_data:

networks:
  airflow_network:
    driver: bridge
